//space O(1) solution
public class Solution {
    public void setZeroes(int[][] matrix) {
        int m = matrix.length;
        int n = matrix[0].length;
        boolean isRow0 = false, isColumn0 = false;
        for(int i = 0; i < m; i++){
            if(matrix[i][0] == 0){
                isColumn0 = true;
                break;
            }
        }
        for(int i = 0; i < n; i++){
            if(matrix[0][i] == 0){
                isRow0 = true;
                break;
            }
        }
        for(int i = 1; i < m; i++){//------
            for(int j = 1; j < n; j++){//-------
                if(matrix[i][j] == 0){
                    matrix[i][0] = 0;
                    matrix[0][j] = 0;
                }
            }
        }
        
        for(int i = 1; i < m; i++){//------
            for(int j = 1; j < n; j++){//-------
                if(matrix[i][0] == 0 || matrix[0][j] == 0)
                    matrix[i][j] = 0;
            }
        }
        if(isColumn0){
            for(int i = 0; i < m; i++)
                    matrix[i][0] = 0;
        }
        if(isRow0){
            for(int i = 0; i < n; i++)
                    matrix[0][i] = 0;
        }
    }
}
//space O(m + n) solution
public class Solution {
    public void setZeroes(int[][] matrix) {
        int m = matrix.length;
        int n = matrix[0].length;
        boolean[] row = new boolean[m];
        boolean[] column = new boolean[n];
        for(int i = 0; i < m; i++){
            for(int j = 0; j < n; j++){
                if(matrix[i][j] == 0){
                    row[i] = true;
                    column[j] = true;
                }
            }
        }
        
        for(int i = 0; i < m; i++){
            for(int j = 0; j < n; j++){
                if(row[i] || column[j])
                    matrix[i][j] = 0;
            }
        }
    }
}
